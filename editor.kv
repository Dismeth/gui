#:kivy 1.1.0

####################################
#
#
#
#
####################################

<SetBox@BoxLayout>:
	# Added pos_hint: {'top': 1} and removed size_hint_y: None in order to fit the screen better.
	# Set is short for Settings - all to be used in SettingsPopup.
    #size_hint_y: None
	pos_hint: {'top': 1}
    height: 30
	canvas.before: 
		Color: 
			rgb: .2, .2, .2 
		Rectangle: 
			pos: self.pos 
			size: self.size	
				
<SetText@TextInput>:
	pos_hint: {'top': 1}
	size_hint_y: None
    height: 30
	length: 20
	multiline: False
	readonly: False
	
<SetLabel@Label>:
	size_hint_y: None
	pos_hint: {'top': 1}
    halign: 'right'
    valign: 'middle'
	bold: True
	length: 10
	height: 30
	
	
<SetDesc@Label>:
	size_hint_y: None
	pos_hint: {'top': 1}
    halign: 'left'
    valign: 'middle'
	bold: False
	text_size: cm(6), cm(3)
	font_size: '12sp'
	height: 30
	lenght: 50
	
<SetCategory@Label>:
    halign: 'center'
    valign: 'middle'
	bold: True
	markup: True
	canvas.before: 
		Color: 
			rgb: 0, 0, 0 
		Rectangle: 
			pos: self.pos 
			size: self.size	
##
##
##

<Menu@Button>:
	height: 25
	size_hint_y: None
<SideBox@BoxLayout>:
	anchor_x: 'left'
	anchor_y: 'top'
    height: 20
	size_hint_y: None

<SideMenu@Button>:
    height: 25
	size_hint_y: None
	
<TitleBox@BoxLayout>:
    size_hint_y: None
    height: 20
	
<TitleLabel@Label>:
	markup: True

<VarValue@Label>:
	markup: True
	halign: 'center'
    valign: 'middle'
	text_size: self.size
	# (r, g, b, a)
	#color: {1, 0, 0, 1}
	canvas.before: 
		Color: 
			rgb: 0.15, 0.15, 0.15
		Rectangle: 
			pos: self.pos 
			size: self.size		
<VarLabel@Label>:
	markup: True
	halign: 'right'
    valign: 'middle'
	text_size: self.size
	color: 0,0.7,0.9,0.1
	canvas.before: 
		Color: 
			rgb: 0.15, 0.15, 0.15
		Rectangle: 
			pos: self.pos 
			size: self.size	
	
Root:
    BoxLayout:
        orientation: 'horizontal'
		anchor_x: 'left'
		anchor_y: 'top'
		BoxLayout:
			orientation: 'vertical'
			size_hint: .2, 1
			#pos_hint: {'y': 0.9}
			#pos_hint_y: 'top'
			SideBox:
				TitleLabel:
					text: "[b]Import /[color=09B9E5]Export[/color][/b]"
			SideMenu:
				text: 'Load'
				on_release: root.show_load()
			SideMenu:	
				text: 'Save'
				on_release: root.show_save()
			SideMenu:	
				text: 'Export To Workdir'
				on_release: root.menu_export_small_dataset()
			SideBox:
				TitleLabel:
					text: "[b]Pre [color=09B9E5]Processing[/color][/b]"
			SideMenu:
				text: 'Label Encode'
				on_release: root.menu_label_encode()
			SideMenu:
				text: 'Scale Numerical Values'
				on_release: root.menu_scale()
			SideMenu:
				text: 'Split Data (train/test)'
				on_release: root.menu_split_data()
			SideBox:
				TitleLabel:
					text: "[b]Data [color=09B9E5]Analysis[/color][/b]"
			SideMenu:
				text: 'Coarse Statistics'
				on_release: root.menu_descriptive_statistics()
			SideMenu:
				text: 'Variable Correlations'
				on_release: root.menu_var_corr()
			SideBox:
				TitleLabel:
					text: "[b]Feature [color=09B9E5]Importance[/color][/b]"
			SideMenu:	
				text: 'Greedy Feature Finder'
				on_release: root.menu_greedyff()
			SideMenu:	
				text: 'RandomForest Feature Importance'
				on_release: root.menu_feature_importance()
			SideMenu:	
				text: 'NBN Top 10 (Univariate)'
				on_release: root.exp_nbn_best()
			SideBox:
				TitleLabel:
					text: "[b]Create [color=09B9E5]Model[/color][/b]"
			SideMenu:	
				text: 'Naive Bayesian Net.'
				on_release: root.menu_nbn()
			SideMenu:	
				text: 'RandomForest'
				on_release: root.menu_randomforest()
			SideMenu:	
				text: 'XGBoost'
				on_release: root.menu_xgboost()
						
			SideBox:
				TitleLabel:
					text: "[b]Experimental [color=09B9E5]Functions[/color][/b]"
			SideMenu:	
				text: 'Exp QuickLoad()'
				on_release: root.exp_quick_load()
			
			SideMenu:	
				text: 'Check Plot'
				on_release: root.menu_plot()
			SideBox:
				TitleLabel:
					text: "[b]Switch [color=09B9E5]View[/color][/b]"
			SideMenu:	
				text: root.output_label
				on_release: root.menu_toggle_main_output()
			SideMenu:	
				text: 'Clear Window'
				on_release: root.menu_output_clear()
			BoxLayout:
				canvas.before: 
					Color: 
						rgb: 0.15, 0.15, 0.15
					Rectangle: 
						pos: self.pos 
						size: self.size	
				
		BoxLayout:
			orientation: 'vertical'
			size_hint: .8, 1
			TitleBox:
				TitleLabel:
					text: "[b]Data [color=09B9E5]Overview[/color][/b]"
			BoxLayout:
				orientation: "horizontal"
				size_hint_y: None
				height: 50
				BoxLayout:
					size_hint: .8, 1
					orientation: "horizontal"
					BoxLayout:
						orientation: "vertical"
						SetBox:
							# self.dataOverview = {'data_loaded': False, 'fname': 'none', 'nrows': 0, 'ncols': 0, 'best_score': 0}
							VarLabel:
								text: "[b]Data Loaded:[/b]"
							VarValue:
								id: data_loaded
								text: root.data_loaded #str(root.dataOverview['data_loaded'])
								# str(root.configCV['seed'])
						SetBox:
							VarLabel:
								text: "[b]File Name:[/b]"
							VarValue:
								id: fname
								text: root.fname #str(root.dataOverview['fname'])
					BoxLayout:
						orientation: "vertical"
						SetBox:
							VarLabel:
								text: "[b]Train Rows:[/b]"
							VarValue:
								text: root.trainrows #str(root.dataOverview['trainrows'])
								# str(root.configCV['seed'])
						SetBox:
							VarLabel:
								text: "[b]Test Rows:[/b]"
							VarValue:
								text: root.testrows #str(root.dataOverview['testrows'])
								# str(root.configCV['seed'])
					BoxLayout:
						orientation: "vertical"
						SetBox:
							VarLabel:
								text: "[b]Columns:[/b]"
							VarValue:
								text: root.ncols # str(root.dataOverview['ncols'])
								# str(root.configCV['seed'])
						SetBox:
							VarLabel:
								text: "[b]Best Score:[/b]"
							VarValue:
								text: root.best_score #str(root.dataOverview['best_score'])
				BoxLayout:
					orientation: "vertical"
					size_hint_y: None
					size_hint: .2, 1
					Menu:
						text: 'Settings'
						on_release: root.show_settings()
					Menu:
						text: 'Reset Settings'
						on_release: root.initialiseSettings()
			
			BoxLayout:
				RstDocument:
					text: root.output_text
					show_errors: False
					allow_copy: True
			BoxLayout:
				size_hint: 1, 0.1
				RstDocument:
					text: root.output_console

<LoadDialog>:
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserListView:
            id: filechooser

        BoxLayout:
            size_hint_y: None
            height: 30
            Button:
                text: "Cancel"
                on_release: root.cancel()

            Button:
                text: "Load"
                on_release: root.load(filechooser.path, filechooser.selection)

<SaveDialog>:
    text_input: text_input

    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserListView:
            id: filechooser
            on_selection: text_input.text = self.selection[0] or ''

        TextInput:
            id: text_input
            size_hint_y: None
            height: 30
            multiline: False

        BoxLayout:
            size_hint_y: None
            height: 30
            Button:
                text: "Cancel"
                on_release: root.cancel()

            Button:
                text: "Save"
                on_release: root.save(filechooser.path,text_input.text)


<Settings>:
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
		pos_hint: {'top': 1}
		size_hint_y: 1
		SetBox:
			SetCategory:
				text: "General [color=09B9E5]Settings[/color]"
		SetBox:
			SetLabel:
				text: "Descriptive stats. on load"
			Switch:
				id: desc_stats_on_load
				active: bool(root.newconfigGeneral['desc_stats_on_load'])
			SetDesc:
				text: "Show and save descriptive statistics when loading new data set."
		SetBox:
			SetLabel:
				text: "Output Folder"
			SetText:
				id: workdir
				text: str(root.newconfigGeneral['workdir'])
			SetDesc:
				text: "Define your (existing) work directory. Please end with backslash."
		SetBox:
			SetCategory:
				text: "Label [color=09B9E5]Encoding[/color]"
		SetBox:
			size_hint_y: None
			height: 70
			SetLabel:
				text: "Columns To Encode"
				height: 70
			SetText:
				id: le_columns
				text: str(root.newconfigLE)
				multiline: True
				height: 70
			SetDesc:
				text: "The columns to be encoded."
				height: 70
		SetBox:
			SetCategory:
				text: "Scale [color=09B9E5]Columns[/color]"
		SetBox:
			size_hint_y: None
			height: 50
			SetLabel:
				text: "Columns To Scale"
				height: 50
			SetText:
				id: scale_columns
				text: str(root.newconfigScale)
				multiline: True
				height: 50
			SetDesc:
				text: "The numerical columns you want to scale."
				height: 50
		SetBox:
			SetLabel:
				text: "Apply List"
			Switch:
				id: apply_scale
				active: bool(root.newconfigGeneral['apply_scale'])
			SetDesc:
				text: "On: only scale columns in list. Off: scale all numerical values (inverse cat. cols)"
		SetBox:
			SetCategory:
				text: "Split [color=09B9E5]Data[/color]"
		SetBox:
			SetLabel:
				text: "Target Column"
			SetText:
				id: target_value
				text: root.newconfigCV['target_value']
			SetDesc:
				text: "The target column in the data set."
		SetBox:
			SetLabel:
				text: "Test Set Size"
			SetText:
				id: test_set_size
				input_filter: 'float'
				text: str(root.newconfigCV['test_set_size'])
			SetDesc:
				text: "Between 0.0-1.0. The size of the training set. Default: 0.4"
		SetBox:
			SetLabel:
				text: "Seed"
			SetText:
				id: seed
				input_filter: 'int'
				text: str(root.newconfigCV['seed'])
			SetDesc:
				text: "Set a seed for reproducible results. Default: random"
		SetBox:
			SetLabel:
				text: "Random Seed"
			Switch:
				id: random_state
				active: bool(root.newconfigCV['random_state_is'])
			SetDesc:
				text: "On: random seed. Off: use seed entered."
		SetBox:
			SetCategory:
				text: "Drop [color=09B9E5]Features[/color]"
				
		SetBox:
			SetLabel:
				text: "Column(s) to Exclude"
			SetText:
				id: feature_importance
				text: str(root.newconfigFI)
			SetDesc:
				text: "Set a list of columns to exclude in feature importance and model creation."
		SetBox:
			SetLabel:
				text: "Apply List of Columns"
			Switch:
				id: apply_LE_list
				active: bool(root.newconfigFIUse)
			SetDesc:
				text: "On: the listed columns will be excluded. Off: all columns used."



        BoxLayout:
            size_hint_y: None
            height: 30
            Button:
                text: "Cancel"
                on_release: root.cancel()
				
            Button:
                text: "Apply Settings"
                on_release: root.settings_save(root.saveGeneral(desc_stats_on_load.active,workdir.text,apply_scale.active),root.saveLE(le_columns.text),root.saveScale(scale_columns.text),root.saveCV(target_value.text, test_set_size.text, seed.text,random_state.active), root.saveFI(feature_importance.text), root.saveFIUse(apply_LE_list.active))